server <- function(input,output) {
output$plt <- renderPlot({
#Trying to recreate the Difference between mean and variance shiny plot
library(ggplot2)
library(reshape2)
#generating 100 random variables for 1dt data set
df=data.frame(
ord=c(1:100),
GroupA=rnorm(100, mean=input$m1, sd=(input$m1/6)),
GroupB=rnorm(100, mean=input$m1, sd=(input$m1/6))
)
#alternate data frame
dfa=data.frame(
ord=c(151:250),
GroupA=rnorm(100, mean=1.2*input$a*input$m1, sd=1.2*input$a*(input$m1/6)),
GroupB=rnorm(100, mean=.8*input$a*input$m1, sd=.8*input$a*(input$m1/6))
)
#melting data
md<- melt(df[,c(1,2:3)], id="ord")
mda<- melt(dfa[,c(1,2:3)], id="ord")
#contructing charts
p<-ggplot(xlab="",ylab="") +
geom_point(data=df,aes(x=ord,y=GroupA),shape=21,color="black",fill="darkblue",stroke=input$m1/5,alpha=.8,size=input$m1)+
geom_point(data=df,aes(x=ord,y=GroupB),shape=22,color="black",fill="red",stroke=input$m1/5,alpha=.8,size=input$m1)+
geom_point(data=dfa,aes(x=ord,y=GroupA),shape=21,color="black",fill="darkblue",stroke=input$m1/5,alpha=.8,size=input$m1)+
geom_point(data=dfa,aes(x=ord,y=GroupB),shape=22,color="black",fill="red",stroke=input$m1/5,alpha=.8,size=input$m1)+
geom_segment(aes(x=-10, xend=110, y=input$m1, yend=input$m1))+
geom_segment(aes(x=135, xend=260, y=input$a*input$m1, yend=input$a*input$m1))+
labs(title="Control Group vs. Stress Environment")+
guides(fill = guide_legend(title = "Groups"))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(size = rel(2),hjust=.5)
)
})
}
shinyApp(server=server, ui=ui)
#General Shiny Template
library(shiny)
ui <- fluidPage(
sliderInput(inputId= "m1","Original Mean",1,10,3,step = .1),
sliderInput(inputId= "a","Adjustment Factor",0,1,.6,step= .01),
plotOutput("plt",width= "100%",height = "400px")
)
server <- function(input,output) {
output$plt <- renderPlot({
#Trying to recreate the Difference between mean and variance shiny plot
library(ggplot2)
library(reshape2)
#generating 100 random variables for 1dt data set
df=data.frame(
ord=c(1:100),
GroupA=rnorm(100, mean=input$m1, sd=(input$m1/6)),
GroupB=rnorm(100, mean=input$m1, sd=(input$m1/6))
)
#alternate data frame
dfa=data.frame(
ord=c(151:250),
GroupA=rnorm(100, mean=1.2*input$a*input$m1, sd=1.2*input$a*(input$m1/6)),
GroupB=rnorm(100, mean=.8*input$a*input$m1, sd=.8*input$a*(input$m1/6))
)
#melting data
md<- melt(df[,c(1,2:3)], id="ord")
mda<- melt(dfa[,c(1,2:3)], id="ord")
#contructing charts
ggplot(xlab="",ylab="") +
geom_point(data=df,aes(x=ord,y=GroupA),shape=21,color="black",fill="darkblue",stroke=input$m1/5,alpha=.8,size=input$m1)+
geom_point(data=df,aes(x=ord,y=GroupB),shape=22,color="black",fill="red",stroke=input$m1/5,alpha=.8,size=input$m1)+
geom_point(data=dfa,aes(x=ord,y=GroupA),shape=21,color="black",fill="darkblue",stroke=input$m1/5,alpha=.8,size=input$m1)+
geom_point(data=dfa,aes(x=ord,y=GroupB),shape=22,color="black",fill="red",stroke=input$m1/5,alpha=.8,size=input$m1)+
geom_segment(aes(x=-10, xend=110, y=input$m1, yend=input$m1))+
geom_segment(aes(x=135, xend=260, y=input$a*input$m1, yend=input$a*input$m1))+
labs(title="Control Group vs. Stress Environment")+
guides(fill = guide_legend(title = "Groups"))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(size = rel(2),hjust=.5)
)
})
}
shinyApp(server=server, ui=ui)
#General Shiny Template
library(shiny)
ui <- fluidPage(
sliderInput(inputId= "m1","Original Mean",1,10,3,step = .1),
sliderInput(inputId= "a","Adjustment Factor",0.1,1,.6,step= .01),
plotOutput("plt",width= "100%",height = "400px")
)
server <- function(input,output) {
output$plt <- renderPlot({
#Trying to recreate the Difference between mean and variance shiny plot
library(ggplot2)
library(reshape2)
#generating 100 random variables for 1dt data set
df=data.frame(
ord=c(1:100),
GroupA=rnorm(100, mean=input$m1, sd=(input$m1/6)),
GroupB=rnorm(100, mean=input$m1, sd=(input$m1/6))
)
#alternate data frame
dfa=data.frame(
ord=c(151:250),
GroupA=rnorm(100, mean=1.2*input$a*input$m1, sd=1.2*input$a*(input$m1/6)),
GroupB=rnorm(100, mean=.8*input$a*input$m1, sd=.8*input$a*(input$m1/6))
)
#melting data
md<- melt(df[,c(1,2:3)], id="ord")
mda<- melt(dfa[,c(1,2:3)], id="ord")
#contructing charts
ggplot(xlab="",ylab="") +
geom_point(data=df,aes(x=ord,y=GroupA),shape=21,color="black",fill="darkblue",stroke=input$m1/5,alpha=.8,size=input$m1)+
geom_point(data=df,aes(x=ord,y=GroupB),shape=22,color="black",fill="red",stroke=input$m1/5,alpha=.8,size=input$m1)+
geom_point(data=dfa,aes(x=ord,y=GroupA),shape=21,color="black",fill="darkblue",stroke=input$m1/5,alpha=.8,size=input$m1)+
geom_point(data=dfa,aes(x=ord,y=GroupB),shape=22,color="black",fill="red",stroke=input$m1/5,alpha=.8,size=input$m1)+
geom_segment(aes(x=-10, xend=110, y=input$m1, yend=input$m1))+
geom_segment(aes(x=135, xend=260, y=input$a*input$m1, yend=input$a*input$m1))+
labs(title="Control Group vs. Stress Environment")+
guides(fill = guide_legend(title = "Groups"))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(size = rel(2),hjust=.5)
)
})
}
shinyApp(server=server, ui=ui)
install.packages("rsconnect")
install.packages('rsconnect')
library(installr)
check.for.updates.R()
install.packages("scitools")
shiny::runApp('C:/Users/Thomas/Desktop/Stapleton')
library("ggplot2", lib.loc="~/R/win-library/3.3")
install.packages("ggplot2")
runApp('C:/Users/Thomas/Desktop/Stapleton')
libarary(rshiny)
library(rshiny)
library(shiny)
library("shiny")
library("shiny", lib.loc="~/R/win-library/3.3")
ls
getwd()
setwd("Users/Thomas/Desktop/Stapleton")
setwd("C:/Users/Thomas/Desktop/Stapleton")
runApp()
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
options(shinyapps.locale.cache=FALSE)
shinyapps:::systemLocale()
install.packages("shinyapps")
shiny::systemLocale()
devtools::install_github('rstudio/shinyapps')
library(devtools)
devtools::install_github('rstudio/shinyapps')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp()
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
ggplot(xlab="",ylab="") +
geom_point(data=df,aes(x=ord,y=GroupA),shape=21,color="black",fill="darkblue",stroke=.2*(2+sqrt(input$m1)),alpha=.8,size=2+sqrt(input$m1))+
geom_point(data=df,aes(x=ord,y=GroupB),shape=22,color="black",fill="red",stroke=.2*(2+sqrt(input$m1)),alpha=.8,size=2+sqrt(input$m1))+
geom_point(data=dfa,aes(x=ord,y=GroupA),shape=21,color="black",fill="darkblue",stroke=.2*(2+sqrt(input$m1)),alpha=.8,size=2+sqrt(input$m1))+
geom_point(data=dfa,aes(x=ord,y=GroupB),shape=22,color="black",fill="red",stroke=.2*(2+sqrt(input$m1)),alpha=.8,size=2+sqrt(input$m1))+
geom_segment(aes(x=-10, xend=110, y=input$m1, yend=input$m1))+
geom_segment(aes(x=135, xend=260, y=input$a*input$m1, yend=input$a*input$m1))+
labs(title="Control Group vs. Stress Environment")+
guides(fill = guide_legend("Groups"), size = "legend", shape = "legend")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(size = rel(2),hjust=.5)
)
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
ggplot(xlab="",ylab="",color=fill) +
geom_point(data=df,aes(x=ord,y=GroupA),shape=21,color="black",aes(fill="GroupA"),stroke=.2*(2+sqrt(input$m1)),alpha=.8,size=2+sqrt(input$m1))+
geom_point(data=df,aes(x=ord,y=GroupB),shape=22,color="black",aes(fill="GroupB"),stroke=.2*(2+sqrt(input$m1)),alpha=.8,size=2+sqrt(input$m1))+
geom_point(data=dfa,aes(x=ord,y=GroupA),shape=21,color="black",aes(fill="GroupA"),stroke=.2*(2+sqrt(input$m1)),alpha=.8,size=2+sqrt(input$m1))+
geom_point(data=dfa,aes(x=ord,y=GroupB),shape=22,color="black",aes(fill="GroupB"),stroke=.2*(2+sqrt(input$m1)),alpha=.8,size=2+sqrt(input$m1))+
scale_fill_manual(name='', values=c('GroupA'='darkblue', 'GroupB'='red'), guide='legend')+
geom_segment(aes(x=-10, xend=110, y=input$m1, yend=input$m1))+
geom_segment(aes(x=135, xend=260, y=input$a*input$m1, yend=input$a*input$m1))+
labs(title="Control Group vs. Stress Environment")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(size = rel(2),hjust=.5)
)
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
runApp('Shiny/Stapleton')
setwd(Shiny/Stapleton)
setwd("Shiny/Stapleton")
DeployApp(app.R)
library(rsconnect)
DeployApp(app.R)
rsconnect::deployApp(server="shinyapps.io",app.R)
rsconnect::deployApp(server="shinyapps.io")
>radioButtons()
?radioButtons()
runApp()
runApp()
runApp()
?mainPanel
runApp()
ui <- fluidPage(
# Application title
titlePanel("Expectation and Variance"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("m1",
"Original Mean:",
min = 1,
max = 10,
value = 3,
step=0.1),
sliderInput("a",
"Adjustment Factor:",
min = .1,
max = 1,
value = .6,
step=0.01),
#For the radio buttons, color and black/white are offered. color is noted "rb" black/white is"bw"
radioButtons(inputId="color",label="Color Choices", selected = "rb",choiceNames = c("Color","Black and White"),choiceValues = c("rb","bw"))
)
,
# Show a plot of the generated distribution
mainPanel(
plotOutput("plt",width="100%",height= "400px")
)
)
)
?if
()
?if{}
?if
()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ui <- fluidPage(
# Application title
titlePanel("Expectation and Variance"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("m1",
"Original Mean:",
min = 1,
max = 10,
value = 3,
step=0.1),
sliderInput("a",
"Adjustment Factor:",
min = .1,
max = 1,
value = .6,
step=0.01),
#For the radio buttons, color and black/white are offered. color is noted "rb" black/white is"bw"
radioButtons(inputId="clr",label="Color Choices", selected = "rb",choiceNames = c("Color","Black and White"),choiceValues = c("rb","bw"))
)
,
# Show a plot of the generated distribution
mainPanel(
plotOutput("plt",width="100%",height= "400px")
)
)
)
colr<- reactive({ifelse(input$clr==rb,1,0)})
colr
colr()
runApp()
#Trying to recreate the Difference between mean and variance shiny plot
library(ggplot2)
library(reshape2)
#generating 100 random variables for 1dt data set
df=data.frame(
ord=c(1:100),
GroupA=rnorm(100, mean=input$m1, sd=(input$m1/6)),
GroupB=rnorm(100, mean=input$m1, sd=(input$m1/6))
)
#alternate data frame
dfa=data.frame(
ord=c(151:250),
GroupA=rnorm(100, mean=1.2*input$a*input$m1, sd=1.2*input$a*(input$m1/6)),
GroupB=rnorm(100, mean=.8*input$a*input$m1, sd=.8*input$a*(input$m1/6))
)
#melting data
md<- melt(df[,c(1,2:3)], id="ord")
mda<- melt(dfa[,c(1,2:3)], id="ord")
#set up for the X axis labels
breaks.major <- c(-10,50,200,260)
breaks.minor <- c(0,100,110,140,150,250)
labels.minor <- c("","Control", "Stress","")
lims <-c(-10,260)
#contructing charts
ggplot(xlab="",ylab="") +
geom_point(data=df,aes(x=ord,y=GroupA),shape=21,fill="white",color="black",stroke=.2*(2+sqrt(input$m1)),alpha=.8,size=2+sqrt(input$m1))+
geom_point(data=df,aes(x=ord,y=GroupB),shape=22,fill="white",color="black",stroke=.2*(2+sqrt(input$m1)),alpha=.8,size=2+sqrt(input$m1))+
geom_point(data=dfa,aes(x=ord,y=GroupA),shape=21,fill="white",color="black",stroke=.2*(2+sqrt(input$m1)),alpha=.8,size=2+sqrt(input$m1))+
geom_point(data=dfa,aes(x=ord,y=GroupB),shape=22,fill="white",color="black",stroke=.2*(2+sqrt(input$m1)),alpha=.8,size=2+sqrt(input$m1))+
geom_segment(aes(x=-10, xend=110, y=input$m1, yend=input$m1))+
geom_segment(aes(x=135, xend=260, y=input$a*input$m1, yend=input$a*input$m1))+
labs(title="Control vs. Stress Environments", face= "bold")+
guides(fill= guide_legend(override.aes=list(shape=c(21,22))))+
scale_x_continuous(expand=c(0,0), limit=lims, minor_breaks=breaks.minor, breaks=breaks.major, labels = labels.minor)+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(size=18, face="bold", color="black"),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(size = rel(2),hjust=.5),
legend.background = element_rect(fill= "white"),
legend.key = element_blank(),
legend.text= element_text(size=14)
)
#Trying to recreate the Difference between mean and variance shiny plot
library(ggplot2)
library(reshape2)
#generating 100 random variables for 1dt data set
df=data.frame(
ord=c(1:100),
GroupA=rnorm(100, mean=m1, sd=(m1/6)),
GroupB=rnorm(100, mean=m1, sd=(m1/6))
)
#alternate data frame
dfa=data.frame(
ord=c(151:250),
GroupA=rnorm(100, mean=1.2*a*m1, sd=1.2*a*(m1/6)),
GroupB=rnorm(100, mean=.8*a*m1, sd=.8*a*(m1/6))
)
#melting data
md<- melt(df[,c(1,2:3)], id="ord")
mda<- melt(dfa[,c(1,2:3)], id="ord")
#set up for the X axis labels
breaks.major <- c(-10,50,200,260)
breaks.minor <- c(0,100,110,140,150,250)
labels.minor <- c("","Control", "Stress","")
lims <-c(-10,260)
#contructing charts
p<-ggplot(xlab="",ylab="") +
geom_point(data=df,aes(x=ord,y=GroupA),shape=21,fill="white",color="black",stroke=.2*(2+sqrt(m1)),alpha=.8,size=2+sqrt(m1))+
geom_point(data=df,aes(x=ord,y=GroupB),shape=22,fill="white",color="black",stroke=.2*(2+sqrt(m1)),alpha=.8,size=2+sqrt(m1))+
geom_point(data=dfa,aes(x=ord,y=GroupA),shape=21,fill="white",color="black",stroke=.2*(2+sqrt(m1)),alpha=.8,size=2+sqrt(m1))+
geom_point(data=dfa,aes(x=ord,y=GroupB),shape=22,fill="white",color="black",stroke=.2*(2+sqrt(m1)),alpha=.8,size=2+sqrt(m1))+
geom_segment(aes(x=-10, xend=110, y=m1, yend=m1))+
geom_segment(aes(x=135, xend=260, y=a*m1, yend=a*m1))+
labs(title="Control vs. Stress Environments", face= "bold")+
guides(fill= guide_legend(override.aes=list(shape=c(21,22))))+
scale_x_continuous(expand=c(0,0), limit=lims, minor_breaks=breaks.minor, breaks=breaks.major, labels = labels.minor)+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(size=18, face="bold", color="black"),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(size = rel(2),hjust=.5),
legend.background = element_rect(fill= "white"),
legend.key = element_blank(),
legend.text= element_text(size=14)
p
library(ggplot2)
library(reshape2)
df=data.frame(
ord=c(1:100),
GroupA=rnorm(100, mean=m1, sd=(m1/6)),
GroupB=rnorm(100, mean=m1, sd=(m1/6))
)
dfa=data.frame(
ord=c(151:250),
GroupA=rnorm(100, mean=1.2*a*m1, sd=1.2*a*(m1/6)),
GroupB=rnorm(100, mean=.8*a*m1, sd=.8*a*(m1/6))
)
md<- melt(df[,c(1,2:3)], id="ord")
mda<- melt(dfa[,c(1,2:3)], id="ord")
breaks.major <- c(-10,50,200,260)
breaks.minor <- c(0,100,110,140,150,250)
labels.minor <- c("","Control", "Stress","")
lims <-c(-10,260)
p<-ggplot(xlab="",ylab="") +
geom_point(data=df,aes(x=ord,y=GroupA),shape=21,fill="white",color="black",stroke=.2*(2+sqrt(m1)),alpha=.8,size=2+sqrt(m1))+
geom_point(data=df,aes(x=ord,y=GroupB),shape=22,fill="white",color="black",stroke=.2*(2+sqrt(m1)),alpha=.8,size=2+sqrt(m1))+
geom_point(data=dfa,aes(x=ord,y=GroupA),shape=21,fill="white",color="black",stroke=.2*(2+sqrt(m1)),alpha=.8,size=2+sqrt(m1))+
geom_point(data=dfa,aes(x=ord,y=GroupB),shape=22,fill="white",color="black",stroke=.2*(2+sqrt(m1)),alpha=.8,size=2+sqrt(m1))+
geom_segment(aes(x=-10, xend=110, y=m1, yend=m1))+
geom_segment(aes(x=135, xend=260, y=a*m1, yend=a*m1))+
labs(title="Control vs. Stress Environments", face= "bold")+
guides(fill= guide_legend(override.aes=list(shape=c(21,22))))+
scale_x_continuous(expand=c(0,0), limit=lims, minor_breaks=breaks.minor, breaks=breaks.major, labels = labels.minor)+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(size=18, face="bold", color="black"),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(size = rel(2),hjust=.5),
legend.background = element_rect(fill= "white"),
legend.key = element_blank(),
legend.text= element_text(size=14)
p
p<-ggplot(xlab="",ylab="") +
geom_point(data=df,aes(x=ord,y=GroupA),shape=21,fill="white",color="black",stroke=.2*(2+sqrt(m1)),alpha=.8,size=2+sqrt(m1))+
geom_point(data=df,aes(x=ord,y=GroupB),shape=22,fill="white",color="black",stroke=.2*(2+sqrt(m1)),alpha=.8,size=2+sqrt(m1))+
geom_point(data=dfa,aes(x=ord,y=GroupA),shape=21,fill="white",color="black",stroke=.2*(2+sqrt(m1)),alpha=.8,size=2+sqrt(m1))+
geom_point(data=dfa,aes(x=ord,y=GroupB),shape=22,fill="white",color="black",stroke=.2*(2+sqrt(m1)),alpha=.8,size=2+sqrt(m1))+
geom_segment(aes(x=-10, xend=110, y=m1, yend=m1))+
geom_segment(aes(x=135, xend=260, y=a*m1, yend=a*m1))+
labs(title="Control vs. Stress Environments", face= "bold")+
guides(fill= guide_legend(override.aes=list(shape=c(21,22))))+
scale_x_continuous(expand=c(0,0), limit=lims, minor_breaks=breaks.minor, breaks=breaks.major, labels = labels.minor)+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(size=18, face="bold", color="black"),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(size = rel(2),hjust=.5),
legend.background = element_rect(fill= "white"),
legend.key = element_blank(),
legend.text= element_text(size=14)
)
p
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
rsconnect::DeployApp(server="shinyapps.io")
rsconnect::UpdateApp(server="shinyapps.io")
runApp()
runApp()
runApp()
rsconnect::deployApp(server="shinyapps.io")
runApp()
runApp()
runApp()
rsconnect::deployApp(server="shinyapps.io")
