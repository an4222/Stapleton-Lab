#modc = lm(NPV ~ ., datasc)
modc = lm(NPV ~ CreditScore + `MSA Code` + `MI Percentage` +
DTI + UPB + CLTV + LTV + `Interest Rate`  + `Original Term`, datasc)
summary(modc)
outlc = which(cooks.distance(modc) >= (4/dim(datasc)[1]))
datascc = datasc[-outlc,]
hist(datascc$NPV,breaks = 100, main = "Cooked NPV Distribution", xlab= "NPVs")
modc1 = lm(NPV ~ CreditScore + `MSA Code` + `MI Percentage` +
DTI + UPB + CLTV + LTV + `Interest Rate`  + `Original Term`, datascc)
summary(modc1)
vif(modc1)
datas
dim(datas)
datat= read_table(file = "C:/Users/Thomas/Documents/Github/Wang499/OrgNPVs2.csv")
dim(datas)
dim(datat)
colnames(datat)
#####Data Entry#####
#####Using Sample Data Instead#####
org <- read.delim(file ="C:/Users/Thomas/Desktop/Data/Freddie1999/sample_orig_1999.txt",header = FALSE, sep = "|", allowEscapes = T)
dim(org)
orgt <- read.table(file ="C:/Users/Thomas/Desktop/Data/Freddie1999/sample_orig_1999.txt",header = FALSE, sep = "|", allowEscapes = T)
dim(org)
dim(orgt)
perf <- read.delim(file ="C:/Users/Thomas/Desktop/Data/Freddie1999/sample_svcg_1999.txt",header = FALSE, sep = "|", allowEscapes = T)
perft <- read.table(file ="C:/Users/Thomas/Desktop/Data/Freddie1999/sample_svcg_1999.txt",header = FALSE, sep = "|", allowEscapes = T)
dim(perf)
dim(perft)
npv  = datascc$NPV
n = length(datascc$NPV)
npv.ecdf<-ecdf(datascc$NPV)
acper<-npv.ecdf(npv)-1/2/n
avg.npv<-mean(npv);sd.npv<-sd(npv)
npv.tran<-qnorm(acper,avg.npv,sd.npv)
head(cbind(npv,acper,npv.tran))
shapiro.test(sample(npv.tran,5000))
par(mfrow = c(2,1))
hist(npv.tran, breaks  = 100)
hist(npv, breaks = 100)
par(mfrow = c(1,1))
hist(npv.tran, breaks  = 100, main = "Transformed NPVs", xlab = "Transformed NPVs")
trandat = datascc
trandat$NPV = npv.tran
modc3 = lm(NPV ~ CreditScore + `MSA Code` + DTI + `MI Percentage` + UPB  +
LTV + `Interest Rate`  + `Original Term`, trandat)
summary(modc3)
vif(modc3)
library("tidyverse")
library("randomForest")
library("car")
datas= read_csv(file = "C:/Users/Thomas/Documents/Github/Wang499/OrgNPVs2.csv")
# mod = lm(NPV ~ CreditScore + `MSA Code` + `MI Percentage` +
#            DTI + UPB + CLTV + LTV + `Interest Rate`  + `Original Term`, data)
# mod1 = lm(NPV ~ CreditScore + DTI + UPB + CLTV + LTV + State, data)
# cleandat = cbind(data$CreditScore,data$`MSA Code`, data$`MI Percentage`,
#                  data$`Number of Units`, data$`Occupancy Status`, data$CLTV,
#                  data$DTI, data$UPB, data$LTV, data$`Interest Rate`,
#                  data$Product, data$State, data$`Postal Code`)
# rf1 = randomForest(cleandat[complete.cases(cleandat),], y= data$NPV[complete.cases(cleandat)])
#####Using Sample Data instead#####
#datas = read_csv(file = "C:/Users/Thomas/Documents/Github/Wang499/OrgSampleNPVs.csv")
datasu = sapply(1:length(colnames(datas)), function(x){
dim(unique(datas[,x]))[1]
})
useless = which(datasu == 1)
datas = datas[,-useless]
keep = which(complete.cases(datas) == T)
datasc = datas[keep,]
#Visualizing the NPVs
hist(datasc$NPV,breaks = 100, main = "Initial NPV Distribution", xlab = "NPVs")
# For some reason this doesn't work vector too big error
#modc = lm(NPV ~ ., datasc)
modc = lm(NPV ~ CreditScore + `MSA Code` + `MI Percentage` +
DTI + UPB + CLTV + LTV + `Interest Rate`  + `Original Term`, datasc)
summary(modc)
dim(datasc)
colnames(datasc)
summary(modc)
fin <- read.csv(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/HowellvQTL_Ratio_LOD,Pvals,EffectSizes.csv")
fin[1:6,1:6]
fin <- fin[,-1]
fin[1:6,1:6]
plot(fin$Position..cM.)
org <- read.csv(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-ObjectC3.csv")
org[1:6,1:6]
plot(fin$Position..cM.)
plot(org[2,])
plot(org[2,-c(1,2)])
par(mfrow = c(1,1))
plot(org[2,-c(1,2)])
par(mar=c(1,1,1,1))
plot(org[2,-c(1,2)])
which(is.na(org[2,]))
plot(org[2,-c(1,2)])
?plot
class(org[2,])
newdat <- org[2,]
str(newdat)
newdat<- org[2,]
newdat<- org[2,-c(1,2)]
newdat<- as.numeric(org[2,-c(1,2)])
str(newdat)
plot(newdat)
newdat
org[1:6,1:6]
org <- read_csv(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-ObjectC3.csv")
org[1:6,1:6]
library("tidyverse")
org <- read_csv(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-ObjectC3.csv")
org[1:6,1:6]
plot(org[2,-c(1,2)])
newdat<- as.numeric(org[2,-c(1,2)])
plot(newdat)
###Let's go
install.packages(c("nycflights13", "gapminder", "Lahman"))
mtcars
dput(mtcars)
###Let's go
#install.packages(c("nycflights13", "gapminder", "Lahman"))
library(tidyverse)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data =mpg)
dim(mpg)
mpg
#3.2.4 exercises
ggplot(data = mpg)
dim(mpg)
?mpg
#drv represents how the car drives, fwd rwd or 4wd
ggplot(data = mpg) +
geom_point(mapping = aes(x = hwy, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
str(mpg)
gglplot(data = mpg) +
geom_point(mapping = aes(x=displ, y = hwy, color = cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ, y = hwy, color = cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ, y = hwy, size = cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ, y = hwy, shape = cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ, y = hwy, color = cty, size = cty))
?geom_point
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ, y = hwy, color = displ < 5))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
str(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ cty, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl)) +
facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
?facet_wrap
plot(fin$Position..cM.)
plot(newdat)
plot(fin$Position..cM.)
plot(newdat)
plot(fin$Position..cM.)
plot(newdat)
plot(fin$Position..cM.)
plot(newdat)
plot(fin$Position..cM.)
plot(newdat)
plot(fin$Position..cM.)
plot(newdat)
plot(fin$Position..cM.)
plot(newdat)
plot(fin$Position..cM.)
plot(newdat)
plot(fin$Position..cM.)
plot(newdat)
table(fin$Chromosome)
org[1:6,1:6]
table(org[1,])
table(as.numeric(org[1,-c(1,2)]))
table(fin$Chromosome)
plot(newdat)
plot(fin$Position..cM.)
plot(newdat)
plot(fin$Position..cM.)
plot(newdat)
length(as.numeric(org[1,-c(1m2)]))
length(as.numeric(org[1,-c(1,2)]))
length(fin$Position..cM.)
plot(newdat)
table(as.numeric(org[1,-c(1,2)]))
unique(as.numeric(org[1,-c(1,2)]))
unique(newdat)
plot(newdat)
unique(as.numeric(org[1,-c(1,2)]))
as.numeric(org[1,1000])
as.numeric(org[1,5000])
as.numeric(org[1,7000])
as.numeric(org[1,10000])
as.numeric(org[1,11000])
as.numeric(org[1,13000])
as.numeric(org[1,15000])
as.numeric(org[1,16000])
as.numeric(org[1,17000])
as.numeric(org[1,19000])
unique(as.numeric(org[1,17000:19956]))
plot(as.numeric(org[1,17000:19956]))
head(which(as.numeric(org[1,17000:19956]) == 2)
)
1447+17000
#18447-19956 on should be Chr 10 not chr 2
co1 <- read_csv(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-Object.csv")
co1[1:6,1:6]
table(co1[1,-c(1,2)])
table(as.numeric(co1[1,-c(1,2)]))
unique(newdat[1,18447:19954])
unique(newdat[18447:19954])
unique(as.numeric(newdat[18447:19954]))
unique(as.numeric(org[1,18447:19954]))
unique(as.numeric(org[1,18446:19954]))
unique(as.numeric(org[1,18445:19954]))
unique(as.numeric(org[1,18446:19956]))
unique(as.numeric(org[1,18446:19957]))
unique(as.numeric(org[1,18446:19956]))
19956-18445
org[1,18446:19956] <- 10
org[1,18446:19956]
write_csv(org,file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-ObjectC3.csv")
?write_csv
write_csv(org,path = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-ObjectC3.csv")
table(org[1,])
table(as.numeric(org[1,]))
table(as.numeric(org[1,-c(1,2)]))
unique(as.numeric(org[1,-c(1,2)]))
org[1:6,1:6]
org[1:2,1:2] <- ""
org[1:6,1:6]
ratio <- org[-c(1,2),1]/org[-c(1,2),2]
unique(org[-c(1,2),1])
ratio <- as.numeric(org[-c(1,2),1])/as.numeric(org[-c(1,2),2])
as.numeric(org[-c(1,2),1])
str(org[,1])
numeric(org[-c(1,2),1])
?numeric
str(org[-c(1,2),1])
as.numeric(org[-c(1,2),1])
as.vector(org[-c(1,2),1])
str(as.vector(org[-c(1,2),1]))
as.numeric(as.vector(org[-c(1,2),1]))
map(org[-1:-2,1])
map(org[-1:-2,1], as.numeric)
unsp <0 map(org[-1:-2,1], as.numeric)
unsp <- map(org[-1:-2,1], as.numeric)
unsp
unlist(unsp)
ratio <- unlist(map(org[-1:-2,1]))/unlist(map(org[-1:-2,2]))
ratio <- unlist(map(org[-1:-2,1], as.numeric))/unlist(map(org[-1:-2,2], as.numeric))
ratio
names(ratio) <- c()
ratio
org[-1:-2,2] <- ratio
org[1:6,1:6]
org <- org[,-1]
colnames(org)[2] <- "Ratio"
org[1:6,1:6]
org <- read_csv(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-ObjectC3.csv")
org[1,18446:19956] <- 10
org[1:2,1:2] <- ""
ratio <- unlist(map(org[-1:-2,1], as.numeric))/unlist(map(org[-1:-2,2], as.numeric))
names(ratio) <- c()
org[-1:-2,2] <- ratio
org <- org[,-1]
colnames(org)[1] <- "Ratio"
org[1:6,1:6]
write_csv(org,path = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-Object-Ratio.csv")
library(beepr)
lapply(1:11, function(x){
beep(sound = x)
})
lapply(1:11, function(x){
beep(sound = x)
})
?tryCatch
dat <- read.cross(file = "C:/Users/Thomas/Documents/GitHub/Stapleton-Lab/Manching\ BayesNet/SimulatedResponse.csv")
dat <- read.csv(file = "C:/Users/Thomas/Documents/GitHub/Stapleton-Lab/Manching\ BayesNet/SimulatedResponse.csv")
dat[1:6,1:6]
dat[1:2,1:4] <- ""
dat[1:6,1:6]
n <- dim(dat)[2]
#####Howell Visualization
dat <- read.csv(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/HowellvQTL_Ratio_LOD,Pvals,EffectSizes.csv")
dat <- dat[,-1]
colnames(dat)
plot(dat$Mean.P.Value)
#####Howell Visualization
library('tidyverse')
ggplot(data = dat) +
geom_smooth(aes(index,dat$Mean.P.Value))
ggplot(data = dat) +
geom_smooth(aes(dat$Mean.P.Value))
ggplot(data = dat) +
geom_smooth(aes(x = Position..cM., y = Mean.P.Value))
ggplot(data = dat) +
geom_smooth(aes(x = Position..cM., y = Mean.P.Value), se = F)
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value), se = F)
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value))
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Variance.P.Value))
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Joint.P.Value))
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value))
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Variance.P.Value))
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Joint.P.Value))
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value)) +
geom_abline(intercept = .05)
?geom_abline
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value)) +
geom_line(intercept = .05)
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value)) +
geom_hline(intercept = .05)
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value)) +
geom_hline(yintercept = .05, aes(color = 'red'))
?geom_hline
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value)) +
geom_hline(yintercept = .05, color = 'red')
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Mean.P.Value)) +
geom_hline(yintercept = .05, color = 'red')
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Variance.P.Value)) +
geom_hline(yintercept = .05, color = 'red')
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = Joint.P.Value)) +
geom_hline(yintercept = .05, color = 'red')
?smooth
smooth(dat$Joint.P.Value, kind = 3)
smooth(dat$Joint.P.value[which(dat$Joint.P.Value)], kind = 3)
smooth(dat$Joint.P.value[which(!is.na(dat$Joint.P.Value))], kind = 3)
which(!is.na(dat$Joint.P.Value))
str(which(!is.na(dat$Joint.P.Value)))
dat$Joint.P.Value %>% !is.na()
dat$Joint.P.value[which(!is.na(dat$Joint.P.Value))]
is.na(dat$Joint.P.Value)
which(is.na(dat$Joint.P.Value))
dat$Joint.P.value[-which(is.na(dat$Joint.P.Value))]
str(dat$Joint.P.Value)
dat$Joint.P.Value[-3]
str(which(is.na(dat$Joint.P.Value)))
dat$Joint.P.value[-c(which(is.na(dat$Joint.P.Value)))]
dat$Joint.P.Value[c(7177,10990,13880)]
dat$Joint.P.Value[-c(7177,10990,13880)]
which(is.na(dat$Joint.P.Value))
nas <- which(is.na(dat$Joint.P.Value))
dat$Joint.P.Value[-nas]
smooth(dat$Joint.P.Value[-nas])
smooth(dat$Joint.P.Value[-nas], kind = '3')
yval <- smooth(dat$Joint.P.Value[-nas], kind = '3')
ggplot(data = dat) +
geom_point(aes(x = Position..cM., y = yval)) +
geom_hline(yintercept = .05, color = 'red')
length(yval)
ggplot() +
geom_point(aes(x = dat$Position..cM., y = yval)) +
geom_hline(yintercept = .05, color = 'red')
ggplot() +
geom_point(aes(x = dat$Position..cM[-nas]., y = yval)) +
geom_hline(yintercept = .05, color = 'red')
ggplot() +
geom_point(aes(x = dat$Position..cM[-nas]., y = yval)) +
geom_hline(yintercept = .05, color = 'red')
ggplot() +
geom_point(aes(x = dat$Position..cM.[-nas], y = yval)) +
geom_hline(yintercept = .05, color = 'red')
yval
class(yval)
as.numeric(yval)
ggplot() +
geom_point(aes(x = dat$Position..cM.[-nas], y = as.numeric(yval))) +
geom_hline(yintercept = .05, color = 'red')
which(yval < .05)
yval[which(yval < .05)]
diff(which(yval < .05))
which(diff(which(yval < .05)) != 1)
diff(which(diff(which(yval < .05)) != 1))
min(yval[1:4])
sig <- which(yval < .05)
min(yval[sig][1:4])
yval
yval[sig]
yval[sig][1:4]
sig
which(yval[sig][1:4] == min(yval[sig][1:4]))
which(yval[sig][5:6] == min(yval[sig][5:6]))
yval[sig][5:6]
repr <- c()
repr <- c(repr,1)
repr <- c(repr,5)
sig
repr <- c(repr,7)
which(yval[sig][8:9] == min(yval[sig][8:9]))
repr <- c(repr,8)
which(yval[sig][10:11] == min(yval[sig][10:11]))
repr <- c(repr,10)
repr
sig[10]
sig[12:14]
sig[12:1]
sig[12:15]
which(yval[sig][12:15] == min(yval[sig][12:15]))
repr <- c(repr,12)
sig
which(yval[sig][16:17] == min(yval[sig][16:17]))
repr <- c(repr,16)
repr
sig[repr]
library('qtl')
library('vqtl')
?mean_var_plot_model_based
cross <- read.cross(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/Howell-Cross-Object-Ratio.csv")
sig[repr][1]
dat$SNP.Name[351]
x <- 1
mean_var_plot_model_based(cross = cross, phenotype.name = 'Ratio',
focal.groups = as.character(dat$SNP.Name[x]))
mean_var_plot_model_based(cross = cross, phenotype.name = 'Ratio',
focal.groups = as.character(dat$SNP.Name[x]),
genotype.names = c("AA","BB"))
map(sig[repr], function(x){
mean_var_plot_model_based(cross = cross, phenotype.name = 'Ratio',
focal.groups = as.character(dat$SNP.Name[x]),
genotype.names = c("AA","BB"))
})
nas
map(sig[repr], function(x){
mean_var_plot_model_based(cross = cross, phenotype.name = 'Ratio',
focal.groups = as.character(dat$SNP.Name[-nas][x]),
genotype.names = c("AA","BB"))
})
sig[repr]
x <- 7
sig[repr][x]
dat$SNP.Name[18441]
x <- sig[repr]
as.character(dat$SNP.Name[-nas][x])
length(dat$SNP.Name[nas])
length(dat$SNP.Name[-nas])
legth(yval)
length(yval)
map(sig[repr], function(x){
mean_var_plot_model_based(cross = cross, phenotype.name = 'Ratio',
focal.groups = as.character(dat$SNP.Name[-nas][x]),
genotype.names = c("AA","BB"))
})
sig[repr]
dat$SNP.Name[-nas][18441]
class(dat$SNP.Name[-nas][18441])
?dev
?dev.off
dev.cur(0)
dev.cur()
dev.list
dev.list()
?dev.new
?pdf
pdf(file = "C://Users/Thomas/Documents/Github/Stapleton-Lab/vQTL\ Howell/RatioSNPs.pdf")
map(sig[repr], function(x){
mean_var_plot_model_based(cross = cross, phenotype.name = 'Ratio',
focal.groups = as.character(dat$SNP.Name[-nas][x]),
genotype.names = c("AA","BB"))
})
dev.off()
library("tidyverse")
library("qtl")
library("vqtl")
setwd("C:/Users/Thomas/Documents/GitHub/Stapleton-Lab/vQTL Howell")
u1= sapply(3:dim(crossframes)[2],function(x){
unique(crossframes[c(-1,-2),x])
})
crossframes = read_csv("Howell-Cross-Object.csv")
?map
